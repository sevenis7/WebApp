@page "/new-blog-article"
@inject IService<DataLayer.Entities.BlogArticle> BlogArticleService

<h3>NewBlogArticle</h3>

<EditForm Model="articleModel" OnValidSubmit=Submit>
    <DataAnnotationsValidator />
    <label ></label>
    <InputText @bind-Value=@articleModel.Title></InputText>
    <ValidationMessage For="()=>articleModel.Title"></ValidationMessage>
    <InputText @bind-Value=@articleModel.Description></InputText>
    <ValidationMessage For="()=>articleModel.Description"></ValidationMessage>
    <InputTextArea @bind-Value=@articleModel.Text></InputTextArea>
    <ValidationMessage For="()=>articleModel.Text"></ValidationMessage>
    <InputText @bind-Value=@articleModel.ImageBase64></InputText>
    @if (!string.IsNullOrEmpty(articleModel.ImageBase64))
    {
        <img src="data:image/jpeg;base64, @articleModel.ImageBase64" />
    }
    <InputFile OnChange="Loading" oncancel="@Clear">Select image</InputFile>
    <button type="submit">
        Create
    </button>
</EditForm>

@code {
    DataLayer.Entities.BlogArticle? articleModel = new();

    private async Task Loading(InputFileChangeEventArgs e)
    {
        var image = await e.File.RequestImageFileAsync("image/png", 300, 300);

        var buffer = new byte[image.Size];

        await image.OpenReadStream(1024 * 1024 * 5).ReadAsync(buffer);

        articleModel.ImageBase64 = Convert.ToBase64String(buffer);

        StateHasChanged();
    }

    private async Task Submit()
    {
        await BlogArticleService.Post(articleModel!);

        NavManager.NavigateTo("blog-articles");
    }

    private void Clear()
    {
        articleModel.ImageBase64 = null;
    }

}
