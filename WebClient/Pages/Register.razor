@page "/register"
@inject IAccountService AccountService


<h3>Register</h3>

<EditForm Model="registerModel" OnValidSubmit="Submit">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    <div>
        <label for="firstName">FirstName:</label>
        <InputText @bind-Value="@registerModel.FirstName" id="firstName" name="firstName" />
    </div>
    <div>
        <label for="lastName">LastName:</label>
        <InputText @bind-Value="@registerModel.LastName" id="lastName" name="lastName" />
    </div>
    <div>
        <label for="login">Login:</label>
        <InputText @bind-Value="@registerModel.Login" id="login" name="login" />
    </div>
    <div>
        <label for="email">Email:</label>
        <InputText @bind-Value="@registerModel.Email" id="email" name="email" />
    </div>
    <div>
        <label for="password">Password:</label>
        <InputText type="password" @bind-Value="@registerModel.Password" id="password" name="password" />
    </div>
    <div>
        <label for="confirmPassword">ConfirmPassword:</label>
        <InputText type="password" @bind-Value="@registerModel.ConfirmPassword" id="confirmPassword" name="confirmPassword" />
    </div>
    <div>
        <button type="submit">Register</button>
    </div>
</EditForm>

@if(errorMessage is not null)
{
    <p>@errorMessage</p>
}

@code {
    UserRegisterViewModel registerModel = new UserRegisterViewModel();

    DataLayer.Entities.User? user = new();

    string? errorMessage = "";

    private async Task Submit()
    {
        try
        {
            user = await AccountService.Register(registerModel);

            errorMessage = "";

            NavManager.NavigateTo("/");
        }
        catch (Exception ex)
        {
            user = null;

            errorMessage = ex.Message;
        }

    }
}
